# 1.=====
# напечатать строку в одну линию - C:\WINDOWS\System32\drivers\etc\nst

# вариант №1=====
# x = 'C:\\WINDOWS\\System32\\drivers\\etc\\nst'
# print(x)

# вариант №2=====
# print(r'C:\WINDOWS\System32\drivers\etc\nst')



# 2.=====
# отсортировать каждую букву - sdfbew

# вариант №1=====
# x = 'sdfbew'
# x = sorted(x)
# print(*x, sep='')

# вариант №2=====
# print(''.join(sorted('sdfbew')))



# 3.=====
#  на входе такой список a = [4, 3, -10, 1, 7, 12], получить такой [4, -10, 12, 3, 1, 7]
# (сортировка четных от мин к макс: [4,-10,12], а т.к. при сортировке числа сдвигаются, то в итоге получим: [4,-10,12,3,1,7] )

# вариант №1=====
# a = [4, 3, -10, 1, 7, 12]
# b=[i for i in a if i%2==0]
# c=[i for i in a if i%2!=0]
# a=''
# a=b+c
# print(a)

# вариант №2=====
# a = [4, 3, -10, 1, 7, 12]
# a.sort(key=lambda x: x % 2)
# print(a)



# 4.=====
#  Вводится строка. Требуется, используя введенную строку, сформировать N=10 пар кортежей в формате:
# (символ, порядковый индекс)
# Первый индекс имеет значение 0. Строка может быть короче 10 символов, а может быть и длиннее. То есть, число пар может быть 10 и менее.
#  Используя функцию zip сформируйте указанные кортежи и сохраните в список с именем lst.
# line=input('Введите строку: ')
# lst = list(zip(line, range(10)))
# print(lst)



# 5.===== Напишите программу, которая подсчитает и выведет сумму квадратов всех двузначных чисел, делящихся на 9.
# При решении задачи используйте комбинацию функций filter, map, sum.
# Обратите внимание: на 9 должно делиться исходное двузначное число, а не его квадрат.
l = [i for i in range(10, 100)]
l1 = list(filter(lambda x: x % 9 == 0, l))
# print(l1)
l2 = sum(list(map(lambda x: x**2, l1)))
print(l2)